# Generated by Django 5.2.3 on 2025-06-21 17:27

from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="CostMetrics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("total_requests", models.IntegerField()),
                ("total_tokens", models.IntegerField()),
                ("total_cost_usd", models.FloatField()),
                ("avg_cost_per_request", models.FloatField()),
                ("cost_by_model", models.JSONField(default=dict)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "indexes": [
                    models.Index(fields=["date"], name="metrics_ser_date_c83082_idx")
                ],
                "unique_together": {("date",)},
            },
        ),
        migrations.CreateModel(
            name="ErrorMetrics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("error_type", models.CharField(max_length=50)),
                ("error_message", models.TextField()),
                ("endpoint", models.CharField(max_length=100)),
                ("frequency", models.IntegerField(default=1)),
                ("first_occurrence", models.DateTimeField(auto_now_add=True)),
                ("last_occurrence", models.DateTimeField(auto_now=True)),
                ("is_resolved", models.BooleanField(default=False)),
                ("resolution_notes", models.TextField(blank=True)),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["error_type", "last_occurrence"],
                        name="metrics_ser_error_t_8f277a_idx",
                    ),
                    models.Index(
                        fields=["endpoint", "last_occurrence"],
                        name="metrics_ser_endpoin_3ca1ec_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="EvaluationMetrics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("session_id", models.CharField(max_length=50)),
                ("student_id", models.CharField(max_length=20)),
                ("lab_name", models.CharField(max_length=100)),
                ("total_files", models.IntegerField()),
                ("successful_files", models.IntegerField()),
                ("failed_files", models.IntegerField()),
                ("total_tokens", models.IntegerField()),
                ("total_cost_usd", models.FloatField()),
                ("evaluation_time_seconds", models.FloatField()),
                ("accuracy_score", models.FloatField(default=0.0)),
                ("feedback_quality_score", models.FloatField(default=0.0)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["session_id"], name="metrics_ser_session_4177f5_idx"
                    ),
                    models.Index(
                        fields=["student_id", "timestamp"],
                        name="metrics_ser_student_a21eaf_idx",
                    ),
                    models.Index(
                        fields=["lab_name", "timestamp"],
                        name="metrics_ser_lab_nam_19014e_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="PerformanceMetrics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("metric_name", models.CharField(max_length=100)),
                ("metric_value", models.FloatField()),
                ("metric_unit", models.CharField(max_length=20)),
                ("period_minutes", models.IntegerField()),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["metric_name", "timestamp"],
                        name="metrics_ser_metric__5e9f7c_idx",
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="RequestMetrics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("request_id", models.CharField(max_length=50, unique=True)),
                ("endpoint", models.CharField(max_length=100)),
                ("method", models.CharField(max_length=10)),
                ("status_code", models.IntegerField()),
                ("response_time_ms", models.FloatField()),
                ("tokens_used", models.IntegerField(default=0)),
                ("estimated_cost_usd", models.FloatField(default=0.0)),
                ("memory_usage_mb", models.FloatField(default=0.0)),
                ("cpu_usage_percent", models.FloatField(default=0.0)),
                ("error_message", models.TextField(blank=True, null=True)),
                ("user_agent", models.CharField(blank=True, max_length=200)),
                ("ip_address", models.CharField(blank=True, max_length=45)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["endpoint", "timestamp"],
                        name="metrics_ser_endpoin_3871b7_idx",
                    ),
                    models.Index(
                        fields=["status_code", "timestamp"],
                        name="metrics_ser_status__ca8905_idx",
                    ),
                    models.Index(
                        fields=["request_id"], name="metrics_ser_request_082bfb_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="SystemMetrics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("metric_type", models.CharField(max_length=50)),
                ("metric_name", models.CharField(max_length=100)),
                ("metric_value", models.FloatField()),
                ("metric_unit", models.CharField(max_length=20)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("additional_data", models.JSONField(default=dict)),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["metric_type", "timestamp"],
                        name="metrics_ser_metric__baf3f5_idx",
                    ),
                    models.Index(
                        fields=["metric_name", "timestamp"],
                        name="metrics_ser_metric__2f3021_idx",
                    ),
                ],
            },
        ),
    ]
